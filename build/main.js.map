{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@babel/polyfill\"","webpack:///./src/index.js","webpack:///external \"meow\"","webpack:///external \"laf-lib\"","webpack:///external \"fs-extra\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","log","console","meow","laf","fs","flags","out","type","alias","cut","lafParser","config","outputDirectory","arguments","length","undefined","fileCut","fileName","_i","_Object$values","values","kits","v","sections","init","assign","initCli","input","inp","toLowerCase","initInk","dir","concat","process","cwd","readJsonSync"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports = require(\"@babel/polyfill\");","const log = console.log;\nconst meow = require(\"meow\");\nconst laf = require(\"laf-lib\");\nconst fs = require(\"fs-extra\");\n\nconst menu = `\n  Usage\n  $ laf <input>\n\n  Input Options (only choose one)\n  1. gen, generate -> Generate required config boilerplate   \n  $ laf gen\n\n  2. f, fetch -> Download everything specified in your config file (.laf.json)\n  $ laf fetch\n\n  Flags (can be used together)\n  1. --out, -o -> Download everything to specified directory\n  $ laf --out \"./my/directory\"\n\n  2. --cut, -c -> Download all PNGs (ie. the \"file cut\") from your kit\n  $ laf --cut \"PNG\"\n  `;\n\nconst flagTree = {\n  flags: {\n    out: {\n      type: \"string\",\n      alias: \"o\"\n    },\n    cut: {\n      type: \"string\",\n      alias: \"c\"\n    }\n  }\n};\n\n//TODO: Add soft & hard flags (pending diff implementation in LAF lib)\n//TODO: Brainstorm best way to handle API rate limit (since it's so low, they're likely to hit)\nconst { input, flags } = meow(menu, flagTree);\n\n/**\n *\n * @param {object} config\n */\n//TODO: Promisify so this can be called in index.test.js\nfunction lafParser(config, outputDirectory = \"./downloads\", fileCut = \"PNG\") {\n  const { name: fileName, value } = config;\n  for (const v of Object.values(value.kits)) {\n    const { name, sections } = v;\n    laf.init(name, { sections }, outputDirectory, fileCut);\n  }\n  return Object.assign({}, { fileName });\n}\n\n/**\n *\n * @param {string} input\n * @param {object} flags\n */\n\n//TODO: Remove circular dependency on '.laf.json' name key in config. Unnecessary. Cascades to laf-lib project\nfunction initCli(input = \"\", flags) {\n  if (typeof input[0] == \"string\") {\n    var inp = input[0].toLowerCase();\n    if (inp == \"gen\" || inp == \"generate\") {\n      laf.initInk();\n    } else if (inp == \"f\" || inp == \"fetch\") {\n      let dir = `${process.cwd()}/.laf.json`;\n      let config = fs.readJsonSync(dir);\n      lafParser(config, flags.out, flags.cut);\n    }\n  } else {\n    log(\n      `Please pass an input string (gen, fetch) like so (eg. laf gen, laf fetch)`\n    );\n  }\n}\ninitCli(input, flags);\n\nmodule.exports = {\n  initCli,\n  lafParser\n};\n//TODO: Add --soft flag (triage, move to GH issues)\n//TODO: Add --hard flag (triage, move to GH issues)\n//TODO: Consider adding --dev flag to prevent overwriting .laf.json & .env when using generate\n\n/*\n----------------------------------------------\nGoal:\n----------------------------------------------\ninit(\n\t\"Capswan - Mobile App - Style Guide\",\n\tconfig.capswan.targetOne,\n\t\"./downloads/capswan/One\",\n\t\"PNG\"\n);\n----------------------------------------------\n*/\n","module.exports = require(\"meow\");","module.exports = require(\"laf-lib\");","module.exports = require(\"fs-extra\");"],"sourceRoot":""}