{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@babel/polyfill\"","webpack:///./src/index.js","webpack:///external \"meow\"","webpack:///./src/generate.js","webpack:///external \"react\"","webpack:///external \"ink\"","webpack:///external \"ink-text-input\"","webpack:///external \"ink-select-input\"","webpack:///external \"fs-extra\"","webpack:///external \"clipboardy\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","_meow","_generate","log","console","cli","_meow2","default","input","arguments","length","undefined","inp","toLowerCase","initInk","init","flags","_ink","render","_react2","createElement","SearchQuery","_this","_classCallCheck","this","_getPrototypeOf","state","error","errorInfo","phase","env","spaceId","apiToken","outputLoc","config","quantity","tempKitName","kits","handleIntro","_assertThisInitialized","handleEnvOutput","handleEnvApiToken","handleEnvSpaceId","handleConfigKitQuantity","handleConfigKitName","React","Component","setState","selection","setNestedStateEnv","setNestedStateConfig","_this$state","concat","_toConsumableArray","Array","from","_ref2","_objectSpread","kv","keys","_ref3","_defineProperty","_ref4","Box","Text","_inkSelectInput2","items","label","onSelect","_this$state2","_this$state2$config","JSON","stringify","uGenerateLAFBoilerplate","values","fs","outputFile","process","cwd","err","clipboardy","writeSync","_this2","_inkTextInput2","onChange","onSubmit","updatePhase","placeholder","functionName","Color","blue","red","_this3","kitNames","rootDir","cError","_this4","_this5","cOutputMethodSelector","parent","nextPhase","_this6","handleConfigOutput","_this7","handleConfigKitNameSubmit","configName","map","kit","sections","headers","cIntro","cEmptyBoilerplate","cEnvSpaceId","_this$state3","_this$state3$env","cEnvApiToken","cEnvOutputMethod","data","cConfigKitQuantity","_this$state4","cConfigKitName","cConfigOutputMethod","includes","renderIntro","renderEnv","renderConfig","cEnd"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports = require(\"@babel/polyfill\");","// #!/usr/bin/env node\nconst log = console.log;\nimport meow from \"meow\";\nimport { initInk } from \"./generate\";\n// import * as laf from \"lingo-asset-fetcher-lib\";\n// import inkConfig from \"./generate.config.sample\";\n\nconst menu = `\n  Usage\n  $ laf <input>\n\n  Options\n   gen (eg. laf gen) -> Generate required config boilerplate   \n  `;\n\n//TODO: Add soft/hard flags\n// ? Pending diff implementation in LAF lib\n\n// const optionTree = {\n// \tflags: {\n// \t\tsoft: {\n// \t\t\ttype: \"boolean\",\n// \t\t\talias: s\n// \t\t},\n// \t\thard: {\n// \t\t\ttype: \"boolean\",\n// \t\t\talias: h\n// \t\t}\n// \t}\n// };\n// const cli = meow(menu, optionTree);\nconst cli = meow(menu);\n\ninit(cli.input, cli.flags);\n\nfunction init(input = \"\", flags) {\n\tif (typeof input[0] == \"string\") {\n\t\tvar inp = input[0].toLowerCase();\n\t\tif (inp == \"gen\" || inp == \"generate\") {\n\t\t\tinitInk();\n\t\t}\n\t} else {\n\t\t//TODO: Set .env\n\t\tlog(`inside`);\n\t\t// laf.init(\n\t\t// \t\"Test Me\",\n\t\t// \tinkConfig.testMe.targetOne,\n\t\t// \t\"./downloads/testMeOne\",\n\t\t// \t\"PNG\"\n\t\t// );\n\t}\n}\n","module.exports = require(\"meow\");","import React from \"react\";\nimport { render, Box, Text, Color } from \"ink\";\nimport TextInput from \"ink-text-input\";\nimport SelectInput from \"ink-select-input\";\nimport fs from \"fs-extra\";\nimport clipboardy from \"clipboardy\";\nconst log = console.log;\n\n// Library: Use case\n//--------------------------------------\n// INK: Config generation\n// MEOW: Running from package.json\n\n/*\n  * Select Input: [Add relevant environment variables, Generate config boilerplate]\n  1. Relevant environment variables: \n\n  * Text Input: \n  1. Lingo Space ID: 000000\n  2. API Key: token\n\n  * Text Input: \n  1. How many kits? 2\n  2. Name of kit: Foobar\n  3. Name of kit: Foobar\n*/\n\n//TODO: Add a check if laf.json already exists to prevent overwriting\nexport class SearchQuery extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\terror: \"\",\n\t\t\terrorInfo: \"\",\n\t\t\tphase: \"\",\n\t\t\tenv: {\n\t\t\t\tspaceId: \"\",\n\t\t\t\tapiToken: \"\",\n\t\t\t\toutputLoc: \"\"\n\t\t\t},\n\t\t\tconfig: {\n\t\t\t\tquantity: \"\",\n\t\t\t\ttempKitName: \"\",\n\t\t\t\tkits: [],\n\t\t\t\toutputLoc: \"\"\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t ***********************************************\n\t\t *\tBinding\n\t\t ************************************************\n\t\t */\n\t\t// * SelectInput\n\t\tthis.handleIntro = this.handleIntro.bind(this);\n\t\tthis.handleEnvOutput = this.handleEnvOutput.bind(this);\n\t\t// * TextInput\n\t\tthis.handleEnvApiToken = this.handleEnvApiToken.bind(this);\n\t\tthis.handleEnvSpaceId = this.handleEnvSpaceId.bind(this);\n\t\tthis.handleConfigKitQuantity = this.handleConfigKitQuantity.bind(this);\n\t\tthis.handleConfigKitName = this.handleConfigKitName.bind(this);\n\t}\n\t/*\n\t ***********************************************\n\t *\tUpdate Phase\n\t ************************************************\n\t */\n\tupdatePhase(phase) {\n\t\tthis.setState({ phase });\n\t}\n\n\t/*\n\t ***********************************************\n\t *\tHandlers\n\t ************************************************\n\t */\n\n\thandleIntro({ value: phase } = selection) {\n\t\t//? Param syntax look weird? See here: https://codeburst.io/renaming-destructured-variables-in-es6-807549754972\n\t\tthis.setState({ phase });\n\t}\n\thandleEnvOutput(outputLoc) {\n\t\tthis.setNestedStateEnv({ outputLoc });\n\t}\n\thandleConfigOutput(outputLoc) {\n\t\tthis.setNestedStateConfig({ outputLoc });\n\t}\n\thandleEnvApiToken(apiToken) {\n\t\tthis.setNestedStateEnv({ apiToken });\n\t}\n\thandleEnvSpaceId(spaceId) {\n\t\tthis.setNestedStateEnv({ spaceId });\n\t}\n\thandleConfigKitQuantity(quantity) {\n\t\tthis.setNestedStateConfig({ quantity });\n\t}\n\thandleConfigKitName(name) {\n\t\tthis.setNestedStateConfig({ tempKitName: name });\n\t}\n\t//TODO: Fix the infinite loop for kit names\n\thandleConfigKitNameSubmit() {\n\t\tconst {\n\t\t\tconfig,\n\t\t\tconfig: { tempKitName: name }\n\t\t} = this.state;\n\t\tif (name.length > 0) {\n\t\t\tconst kits = [...Array.from(config.kits), { name }];\n\t\t\tthis.setState(({ config }) => {\n\t\t\t\treturn {\n\t\t\t\t\tconfig: {\n\t\t\t\t\t\t...config,\n\t\t\t\t\t\tkits,\n\t\t\t\t\t\ttempKitName: \"\"\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t}\n\t/*\n\t***********************************************\n\t*\tsetNestedState Factories\n\t************************************************\n\t? since event object is not available, what's the best way to create a generic handler?\n\t? (ie. can't do e.target.name/value trick)\n\t*/\n\n\tsetNestedStateEnv(kv) {\n\t\tlet key = Object.keys(kv);\n\t\tthis.setState(({ env }) => ({\n\t\t\tenv: {\n\t\t\t\t...env,\n\t\t\t\t[key]: kv[key]\n\t\t\t}\n\t\t}));\n\t}\n\tsetNestedStateConfig(kv) {\n\t\tlet key = Object.keys(kv);\n\t\tthis.setState(({ config }) => ({\n\t\t\tconfig: {\n\t\t\t\t...config,\n\t\t\t\t[key]: kv[key]\n\t\t\t}\n\t\t}));\n\t}\n\t/*\n\t ***********************************************\n\t *\tEvent Lifecycle\n\t ************************************************\n\t */\n\t// componentDidUpdate() {\n\t// \tlog(`this.state: ${JSON.stringify(this.state, null, 2)}`);\n\t// }\n\tcomponentDidCatch(error, errorInfo) {\n\t\tthis.setState({ error, errorInfo });\n\t}\n\n\t/*\n\t ***********************************************\n\t * Components\n\t ************************************************\n\t */\n\tcIntro() {\n\t\t//TODO: Add exit as third option\n\t\tconst wydItems = [\n\t\t\t{\n\t\t\t\tlabel: \"Generate empty boilerplate\",\n\t\t\t\tvalue: \"emptyBoilerplate\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: \"Generate boilerplate interactively\",\n\t\t\t\tvalue: \"interactiveBoilerplate\"\n\t\t\t}\n\t\t];\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>What would you like to do?</Text>\n\t\t\t\t<SelectInput items={wydItems} onSelect={this.handleIntro} />\n\t\t\t</Box>\n\t\t);\n\t}\n\t//TODO: Refactor cEnd to \"cConfigEnd\"\n\tcEnd() {\n\t\tconst {\n\t\t\tspaceId,\n\t\t\tapiToken,\n\t\t\tconfig: { outputLoc, kits }\n\t\t} = this.state;\n\t\t//TODO: Abstract below into utility function for cEnd and cEnvDone's inline function\n\t\t//TODO: Add a check to see whether clipboard is already filled. If so, forego this option and write to laf.json\n\t\tlet config = JSON.stringify(\n\t\t\tthis.uGenerateLAFBoilerplate(\".laf.json\", Object.values(kits)),\n\t\t\tnull,\n\t\t\t2\n\t\t);\n\t\tif (outputLoc == \"dotLAF\") {\n\t\t\tfs.outputFile(`${process.cwd()}/.laf.json`, config, err => {\n\t\t\t\tif (err) throw err;\n\t\t\t});\n\t\t} else if (outputLoc == \"clipboardConfig\") {\n\t\t\tclipboardy.writeSync(config);\n\t\t}\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>state: ${JSON.stringify(this.state, null, 2)}</Text>\n\t\t\t</Box>\n\t\t);\n\t}\n\t//TODO: Validate config.quantity. Must be int\n\tcConfigKitQuantity() {\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>How many kits would you like to download assets from?</Text>\n\t\t\t\t&nbsp;\n\t\t\t\t<TextInput\n\t\t\t\t\tvalue={this.state.config.quantity}\n\t\t\t\t\tonChange={this.handleConfigKitQuantity}\n\t\t\t\t\tonSubmit={() => {\n\t\t\t\t\t\tthis.updatePhase(\"configKitName\");\n\t\t\t\t\t}}\n\t\t\t\t\tplaceholder=\"#\"\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t);\n\t}\n\tcError(functionName, err) {\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Color blue>{functionName}(): </Color>\n\t\t\t\t<Color red>Error: {err}</Color>\n\t\t\t</Box>\n\t\t);\n\t}\n\tcEmptyBoilerplate(kitNames = [\"\"]) {\n\t\tlet rootDir = process.cwd();\n\t\tlet env = { name: \".env\", value: `SPACE_ID=''\\nAPI_TOKEN=''` };\n\t\tlet config = this.uGenerateLAFBoilerplate(\".laf.json\", kitNames);\n\t\t//TODO: Any reason I should not remove rootDir and replace it with cwd?\n\t\tfs.outputFile(`${rootDir}/${env.name}`, env.value, err => {\n\t\t\tif (err) return this.cError(\"cEmptyBoilerplate\", err);\n\t\t});\n\t\tfs.outputFile(\n\t\t\t`${rootDir}/${config.name}`,\n\t\t\tJSON.stringify(config.value, null, 2),\n\t\t\terr => {\n\t\t\t\tif (err) return this.cError(\"cEmptyBoilerplate\", err);\n\t\t\t}\n\t\t);\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>\n\t\t\t\t\t<Color blue>{config.name}</Color> & <Color blue>{env.name}</Color> has\n\t\t\t\t\tbeen generated.\n\t\t\t\t</Text>\n\t\t\t</Box>\n\t\t);\n\t}\n\t//TODO: Add check after config is generated to output to clipboard or file\n\tcEnvSpaceId() {\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>What's your Lingo Space ID?</Text>&nbsp;\n\t\t\t\t<TextInput\n\t\t\t\t\tvalue={this.state.env.spaceId}\n\t\t\t\t\tonChange={this.handleEnvSpaceId}\n\t\t\t\t\tonSubmit={() => this.updatePhase(\"envApiToken\")}\n\t\t\t\t\tplaceholder=\"000000\"\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t);\n\t}\n\tcEnvApiToken() {\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>What's your Lingo API Token?</Text>&nbsp;\n\t\t\t\t<TextInput\n\t\t\t\t\tvalue={this.state.env.apiToken}\n\t\t\t\t\tonChange={this.handleEnvApiToken}\n\t\t\t\t\tonSubmit={() => this.updatePhase(\"envOutputMethod\")}\n\t\t\t\t\tplaceholder=\"token\"\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t);\n\t}\n\t//TODO: Abstract handleEnvOutput method\n\tcConfigOutputMethod() {\n\t\tlet configOutputItems = [\n\t\t\t{\n\t\t\t\tlabel: \"Write to ./.laf.json\",\n\t\t\t\tvalue: \"dotLAF\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: \"Write to clipboard\",\n\t\t\t\tvalue: \"clipboardConfig\"\n\t\t\t}\n\t\t];\n\t\treturn this.cOutputMethodSelector(configOutputItems, \"config\", \"end\");\n\t}\n\tcEnvOutputMethod() {\n\t\tlet envOutputItems = [\n\t\t\t{\n\t\t\t\tlabel: \"Write to ./.env\",\n\t\t\t\tvalue: \"dotEnv\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: \"Write to clipboard\",\n\t\t\t\tvalue: \"clipboard\"\n\t\t\t}\n\t\t];\n\t\treturn this.cOutputMethodSelector(\n\t\t\tenvOutputItems,\n\t\t\t\"env\",\n\t\t\t\"configKitQuantity\"\n\t\t);\n\t}\n\tcOutputMethodSelector(items, parent, nextPhase) {\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>{`Where would you like to output this data?\\n`}</Text>\n\t\t\t\t<SelectInput\n\t\t\t\t\titems={items}\n\t\t\t\t\tonSelect={({ value } = outputLoc) => {\n\t\t\t\t\t\tparent === \"env\"\n\t\t\t\t\t\t\t? this.handleEnvOutput(value)\n\t\t\t\t\t\t\t: this.handleConfigOutput(value);\n\t\t\t\t\t\tthis.updatePhase(nextPhase);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t);\n\t}\n\tcConfigKitName() {\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>What's the name of your kit's config?</Text>\n\t\t\t\t&nbsp;\n\t\t\t\t<TextInput\n\t\t\t\t\tvalue={this.state.config.tempKitName}\n\t\t\t\t\tonChange={this.handleConfigKitName}\n\t\t\t\t\tonSubmit={() => {\n\t\t\t\t\t\tthis.handleConfigKitNameSubmit();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t);\n\t}\n\t/*\n\t ***********************************************\n\t * Utilities\n\t ************************************************\n\t */\n\t//TODO: Create uGenerateEnvBoilerplate\n\t//TODO: Update emptyBoilerplate & interactiveBoilerplate with new Env generator\n\tuGenerateLAFBoilerplate(configName, kitNames) {\n\t\tlet kits = kitNames.map(kit => {\n\t\t\tlet name = kit.name;\n\t\t\treturn {\n\t\t\t\tname,\n\t\t\t\tsections: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\theaders: [\"\"]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\t});\n\t\treturn {\n\t\t\tname: configName,\n\t\t\tvalue: {\n\t\t\t\tkits\n\t\t\t}\n\t\t};\n\t}\n\t/*\n\t ***********************************************\n\t * Conditional Rendering (phase checkers)\n\t ************************************************\n\t */\n\trenderIntro() {\n\t\tif (this.state.phase == \"\") {\n\t\t\treturn this.cIntro();\n\t\t}\n\t\tif (this.state.phase == \"emptyBoilerplate\") {\n\t\t\treturn this.cEmptyBoilerplate();\n\t\t} else if (this.state.phase == \"interactiveBoilerplate\") {\n\t\t\treturn this.cEnvSpaceId();\n\t\t}\n\t}\n\trenderEnv() {\n\t\tconst {\n\t\t\tphase,\n\t\t\tenv: { outputLoc, spaceId, apiToken }\n\t\t} = this.state;\n\t\tswitch (phase) {\n\t\t\tcase \"envSpaceId\":\n\t\t\t\treturn this.cEnvSpaceId();\n\t\t\tcase \"envApiToken\":\n\t\t\t\treturn this.cEnvApiToken();\n\t\t\tcase \"envOutputMethod\":\n\t\t\t\treturn this.cEnvOutputMethod();\n\t\t\tcase \"envDone\":\n\t\t\t\tlet data = `SPACE_ID='${spaceId}'\\nAPI_TOKEN='${apiToken}'`;\n\t\t\t\tif (outputLoc == \"dotEnv\") {\n\t\t\t\t\tfs.outputFile(\".env\", data, err => {\n\t\t\t\t\t\tif (err) throw err;\n\t\t\t\t\t});\n\t\t\t\t} else if (outputLoc == \"clipboard\") {\n\t\t\t\t\tclipboardy.writeSync(data);\n\t\t\t\t}\n\t\t\t\treturn this.cConfigKitQuantity();\n\t\t\tdefault:\n\t\t\t\treturn (\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\tNothing found in <Color blue>renderEnv()</Color>\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Box>\n\t\t\t\t);\n\t\t}\n\t}\n\trenderConfig() {\n\t\tconst { phase, config } = this.state;\n\t\tswitch (phase) {\n\t\t\tcase \"configKitQuantity\":\n\t\t\t\treturn this.cConfigKitQuantity();\n\t\t\tcase \"configKitName\":\n\t\t\t\tif (config.kits.length < config.quantity) {\n\t\t\t\t\treturn this.cConfigKitName();\n\t\t\t\t} else {\n\t\t\t\t\treturn this.cConfigOutputMethod();\n\t\t\t\t}\n\t\t\t// case \"configDone\":\n\t\t\t// \treturn this.cConfigOutputMethod();\n\t\t\tdefault:\n\t\t\t\treturn (\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\tNothing found in <Color blue>renderConfig()</Color>\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Box>\n\t\t\t\t);\n\t\t}\n\t}\n\t//TODO: Remove unnecessary this statements\n\trender() {\n\t\tconst { phase } = this.state;\n\t\tif (phase.includes(\"Boilerplate\") || phase == \"\") {\n\t\t\treturn this.renderIntro();\n\t\t} else if (phase.includes(\"env\")) {\n\t\t\treturn this.renderEnv();\n\t\t} else if (phase.includes(\"config\")) {\n\t\t\treturn this.renderConfig();\n\t\t} else if (phase == \"end\") {\n\t\t\treturn this.cEnd();\n\t\t}\n\t}\n}\n\nexport function initInk() {\n\trender(<SearchQuery />);\n}\n","module.exports = require(\"react\");","module.exports = require(\"ink\");","module.exports = require(\"ink-text-input\");","module.exports = require(\"ink-select-input\");","module.exports = require(\"fs-extra\");","module.exports = require(\"clipboardy\");"],"sourceRoot":""}